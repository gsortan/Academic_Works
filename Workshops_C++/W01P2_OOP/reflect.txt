///////////////////////////////////////////////////////////////////////////

                              Reflection
                             Workshop - #1
Full Name  : Gordon Tan
Student ID#: 147206221
Email      : gtan16@myseneca.ca
Section    : NAA
Date: May-20th-2023

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

In this workshop I learned about how to break down a programming solution into separate modules with a header and cpp implementation files to make my code cleaner and more organized. Each module having functions and variables that are grouped together with a high level of cohesion. It was also very useful to know about header include safe guards for compilation to prevent multiple inclusions of a header. The one definition rule is something to keep in mind. Avoiding a header file mess is also important so you donâ€™t want to include headers in a header file and only what is absolutely necessary. I ended up using a forward declaration for a structure in a header file. It is best practice to include the headers in the CPP source code file. Name spaces help in organizing code into groups and you can avoid naming conflicts with variables and functions that have the same identifier. With part 2 of the workshop I think the only thing I had a little bit of difficulty was to think carefully how to do the strStr function which was a little more complex than all the other string operation functions.