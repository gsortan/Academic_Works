///////////////////////////////////////////////////////////////////////////

                              Reflection
                             Workshop - #2
Full Name  : Gordon Tan
Student ID#: 147206221
Email      : gtan16@myseneca.ca
Section    : NAA
Date: May-27th-2023

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

In this workshop we did some overloading of functions. It really helps to make more readable code and instead of having different function names which can be more trouble we can just use the same one with different parameters each time. Using references which I will use more often is also convenient in that it can automatically dereference for cleaner code. Dynamic memory allocation was another point in how we can create an array of any size and the importance of being careful to make sure that memory is cleaned up to avoid memory leak situations, it's good practice to set any pointers to NULL after deletion. An out parameter is a kind of parameter which it allows for multiple values to be returned easily without having to use return statements for a function. An example is passing by reference or address. An in parameter on the other hand as an example is passing by value as it creates a copy of that parameter and any modification with it is solely within the confines of that function block. It does not affect anything outside. I would say the openFile(const char filename[]) function is using an in parameter, as it uses a const char array for the file name. With the const qualifier, the file name is unmodifiable in the function therefore nothing is returned or changed on the outside. 